class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> charMap;
        unordered_map<char, int>::iterator mapIt;
        int i=0,j=0;
        int result = 0;
        for(j=0; j< (s.size()); j++)
        {
            if((mapIt = charMap.find(s[j])) != charMap.end())
            {
                if(i <= mapIt->second)
                    i = mapIt->second+1;
            }
            charMap[s[j]] = j;
            if(result < (j-i+1))
            {
                result = j-i+1;
            }
        }
        return result;
    }
};
